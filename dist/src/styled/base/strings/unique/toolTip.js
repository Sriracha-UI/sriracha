var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { css } from "styled-components";
export default css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  & .tooltip {\n    visibility: hidden;\n    opacity: 0;\n    margin: ", ";\n    padding: ", ";\n    width: ", ";\n    height: ", ";\n    top: ", ";\n    right: ", ";\n    bottom: ", ";\n    left: ", ";\n    border-radius: ", ";\n    z-index: ", ";\n    position: absolute;\n    transition: ease-in-out, visibility 0.25s ease-in-out;\n    transition: ease-in-out, opacity 0.25s ease-in-out;\n  }\n\n  &:hover .tooltip {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:focus .tooltip {\n    visibility: visible;\n    opacity: 1;\n  }\n"], ["\n  & .tooltip {\n    visibility: hidden;\n    opacity: 0;\n    margin: ", ";\n    padding: ", ";\n    width: ", ";\n    height: ", ";\n    top: ", ";\n    right: ", ";\n    bottom: ", ";\n    left: ", ";\n    border-radius: ", ";\n    z-index: ", ";\n    position: absolute;\n    transition: ease-in-out, visibility 0.25s ease-in-out;\n    transition: ease-in-out, opacity 0.25s ease-in-out;\n  }\n\n  &:hover .tooltip {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:focus .tooltip {\n    visibility: visible;\n    opacity: 1;\n  }\n"])), function (props) { return (props.ttM ? props.ttM : "0"); }, function (props) { return (props.ttP ? props.ttP : "0"); }, function (props) { return (props.ttW ? props.ttW : "auto"); }, function (props) { return (props.ttH ? props.ttH : "auto"); }, function (props) { return (props.top ? props.top : "none"); }, function (props) { return (props.right ? props.right : "none"); }, function (props) { return (props.bottom ? props.bottom : "none"); }, function (props) { return (props.left ? props.left : "none"); }, function (props) { return (props.ttRadius ? props.ttRadius : "auto"); }, function (props) { return (props.zIndex ? props.zIndex : 1); });
var templateObject_1;
